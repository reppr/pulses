iCode trower

keywords

no dest action flags in jiffle player needed?



// DADA TODO:  #error "sorry this module is temporary switched off"
switched off all older menu examples to decide about menu api changes

softboard  should be done soon



analogReadResolution(12);

~/Arduino/hardware/arduino/sam/variants/arduino_due_x/

~/Arduino/hardware/arduino/avr/variants/leonardo/
__AVR_ATmega32U4__

test float output on PC.


IMAGES of used dev boards

PIN STICKERS of used dev boards


show pp configuration

re organize pp configuration (files), do not forget NO_GPIO_PINS

remove stress indicators, UI?

USE_GPI0_SWITCH	low active input switch || boot button ;)
		i.e. restart pattern in musicBox

free 'i' for input (like double klick ;)

menu: preambles for en-jiffle, en_info, ...
	    and for en_xxx_trower

mnemonics for gpio usage like
	  sw0
	  IO<nn>
	  I<nn>
	  O<nn>
	  Touch
	  CLICK
	  DAC1
	  DAC2
	  ... etc

additional instant stress release

tuning groups octaves for ending, base_pulse, etc

stereo DACs

SPIFFS https://randomnerdtutorials.com/install-esp32-filesystem-uploader-arduino-ide/

fix jiffle editor in :M

stress configuration

extend to 4 voice groups

bereichsregister

fix sync pause display

array2name(SCALES, selected_in(SCALES))		array2selected_name() ?

MENU,out_scanf(....);

show selected icode in show basic parameters

'::Ht' to switch menu just for a line

PR 140 broken

maximal times run time configurable

BT detection when idle?, muBo start?

BUG often plays 2 subcycles

TODO: REMOVE: multiplier, divisor	################################################################

// TODO: FIXME: MUSICBOX_HARD_END_SECONDS		// savety net	################

power save mode for OLED deep_sleep()

FIXME: debug power off noise

FIXME:
    //# harmonie
    //# harmonies

separe BATTERY_LEVEL_CONTROL_PIN and signal LED

SWITCH 1-4

gather configuration variables in the code	// TODO: do more

// TODO: maybe clone whole base_pulse ???

ununlaute on OLED äöüÄÖÜ

menu stack

PRENAME (etc) nvs UI

// TODO: void u8x8_SetPowerSave(u8x8_t *u8x8, uint8_t is_enable);

MPU-6050

introduce SIGNAL leds, use them i.e. MORSE_OUTPUT_PIN

change PERIPHERAL_POWER_SWITCH_PIN as GPIO12 is active during boot process...

BATTERY_LEVEL_CONTROL_PIN	must be set somewhere appropriate

void delay_pause() {	// FIXME: (i.e. morse input...)

double keywords in Pulses

PULSES.select_from_to(0,bass_pulses);			// TODO: do not start by 0!	pulse[bass_pulses] belongs to both output groups

NVS: is there hardware for peripheral power switch?


wo isch de Störfall?
s hät glaub mehreri ...
die spilled offebar nöd uf allne Instrumänt, so try CHATEAU

remove unused morse code

AG_mode D6M
rename AG_mode AG_receive_mode

TODO morse command names come unformatted on menu: "XYZSEND" should be "XYZ |SEND|"

* ESPNOW
* MPU6050 offsets nvs

* MAC nvs	*not* needed, can read it directly ;)

*NO OLED OUTPUT* when it is in POWER SAVE mode		maybe already done?

check monochrome_display_hardware	   MENU.out_ON_off(monochrome_display_hardware);

FIXME: OLED != DELWORD

T touch softboard

analogRead als input
"analogi" touch wert als input

rename simple_theme animals_voice


ESP_NOW VERBOISITY level

ESP_NOW on USB POWER (only) is flaky	:(

MENU.outln_invalid("text");

do I still need .c_str()

monochrome feedback on motion UI switching

replace delay_pause() morse input...

TODO: monochrome pause time

switch ESP-NOW UI

factor out randomisation

TODO: fix clash between MPU6050 and DS1307
TODO: i2c_scan() should know all used i2c devices, maybe even verify them

TODO: possibility to calibrate touch level during startup

i2cdevlib/Arduino/I2Cdev/I2Cdev.h
#define I2CDEV_IMPLEMENTATION       I2CDEV_BUILTIN_FASTWIRE	// DADA

ESP_NOW  VERBOSITY

stress on soft end

esp_now peer musicians list {MAC, PRENAME, /* hw options */}

ultrasonic distance sensor based on interrupts

unsigned int tigg_ding4096[] = {1,8192,3, 1,2,1, 1,4096,1024, 0,0,0};	// TODO: nice, use it

char* setMACstr(const uint8_t* mac) {	// TODO: mac==NULL case ################

TODO: more work left to make all instruments come up in time ;)
delay(10);	// delay for esp_now, but left to make all instruments come up in time ;)

esp_now TIME SLICES for broadcast response

change monochrome row jiffles

// TODO: parameter including preName	peer_ID_t ################
esp_err_t esp_now_pulses_add_peer(const mac_addr_t *mac_addr) {	// might give feedback

try:
https://github.com/MartyMacGyver/ESP32-Digital-RGB-LED-Drivers/blob/master/examples/arduino-esp32/demo1/demo1.ino

void dumpSysInfo() {
  esp_chip_info_t sysinfo;
  esp_chip_info(&sysinfo);
  Serial.print("Model: ");
  Serial.print((int)sysinfo.model);
  Serial.print("; Features: 0x");
  Serial.print((int)sysinfo.features, HEX);
  Serial.print("; Cores: ");
  Serial.print((int)sysinfo.cores);
  Serial.print("; Revision: r");
  Serial.println((int)sysinfo.revision);
}

pulses_RGB_LED_string.h	 why do i always get 3 identical LEDs ???
  HW PROBLEM?	runs well with 1m 144 LED 5V string :)

what is sysinfo.features ???

float saturation_start_value = 0.2;	// TODO: test&trimm default value #################

TODO: float menu input !!!

ui_conf_t TODO: include selection ???

slowly fade rgb leds after ending

// TODO: stress configuration struct stress_conf_t

see also: ROADMAP.txt

fix menu crash after nvs_clear_all_keys()

nvs show all keys

// catch bugs, if any ;)  TODO: REMOVE:

if(accGyro_invert)	// invert mathematical axis	// TODO: where to invert?

encrypted ESP-NOW

see: infos/internal/2019-08-20_backtrace.txt

HUE OFFSETS foreground/background

fix TOUCH MORSE INTERRUPT, from time to time there are still malfunctions and crashes

run time switching of rgb strings to test noise  "Good old Major" 95

time_slice=ILLEGAL8

why do i still include inputs?	never really used

auto calibrate morse touch input interrupt level

factor out 'L' hierarchy, use in :N

fix LiPo OLED type boards

warn if accGyr offsets are not set

GYRO_FLOAT_SCALING variable with UI

stop automatic esp_now_add_identity

use musicBoxConf.lowest_primary etc
